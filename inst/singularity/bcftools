#!/bin/bash
#Parsing needed to make aiBox behave as if it were the native bcftools binary.  Assumes that it is being called from alleleIntegrator::findVariants with associated syntax and file paths.  This produces a call that is very specific
#Where is the singularity build found?
dir="$(dirname $(readlink -f ${BASH_SOURCE[0]}))"
cmd=$(basename "$0")
boxPath=${dir}/aiBox.sif
#Only need to do extracting for the mpileup command
if grep -q "mpileup" <<< "$@"
then
  binds="--bind "
  #Extract bam param and pick a dummy location for it in /tmp
  b=`echo "$@"|sed 's/.*-f \(.\+\) -r \(.\+\) \(.\+\)/\3/g'`
  #echo "b is $b"
  bbind=`tempfile`
  binds="${binds}$(realpath ${b}):${bbind}"
  #Bind in index file if it exists (you'll be in trouble if it doesn't....)
  if [ -n "${b}.bai" ]
  then
    binds="${binds},$(realpath ${b}.bai):${bbind}.bai"
  fi
  #Same but for the reference genome
  r=`echo "$@"|sed 's/.*-f \(.\+\) -r \(.\+\) \(.\+\)/\1/g'`
  rbind=`tempfile`
  binds="${binds},$(realpath ${r}):${rbind}"
  #echo "r is $r"
  #Bind genome reference index if exists
  if [ -n "${r}.fai" ]
  then
    binds="${binds},$(realpath ${r}.fai):${rbind}.fai"
  fi
  #Do all the substituting of parameters to construct the call as seen by aiBox
  out=`echo "$@"|sed 's, -f .\+ -r ,'" -f ${rbind} -r "',g'|sed 's,\( -r .\+ \).\+$,\1'"${bbind}"',g'`
  #out=`echo "$@"|sed 's,\(.*-r \).*,\1'"${rbind} ${bbind}"',g'`
  singularity exec ${binds} ${boxPath} ${cmd} ${out}
else
  #"$@" is special and needs to be used directly...
  singularity exec ${boxPath} ${cmd} "$@"
fi
